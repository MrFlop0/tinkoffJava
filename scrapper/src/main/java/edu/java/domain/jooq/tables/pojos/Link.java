/*
 * This file is generated by jOOQ.
 */

package edu.java.domain.jooq.tables.pojos;

import jakarta.validation.constraints.Size;
import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.LocalDateTime;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class Link implements Serializable {

    private static final long serialVersionUID = 1L;

    private String link;
    private Integer type;
    private Integer starsCount;
    private Integer answersCount;
    private LocalDateTime updateDate;
    private LocalDateTime previousCheck;

    public Link() {
    }

    public Link(Link value) {
        this.link = value.link;
        this.type = value.type;
        this.starsCount = value.starsCount;
        this.answersCount = value.answersCount;
        this.updateDate = value.updateDate;
        this.previousCheck = value.previousCheck;
    }

    @ConstructorProperties({"link", "type", "starsCount", "answersCount", "updateDate", "previousCheck"})
    public Link(
        @NotNull String link,
        @NotNull Integer type,
        @Nullable Integer starsCount,
        @Nullable Integer answersCount,
        @NotNull LocalDateTime updateDate,
        @NotNull LocalDateTime previousCheck
    ) {
        this.link = link;
        this.type = type;
        this.starsCount = starsCount;
        this.answersCount = answersCount;
        this.updateDate = updateDate;
        this.previousCheck = previousCheck;
    }

    /**
     * Getter for <code>LINK.LINK</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getLink() {
        return this.link;
    }

    /**
     * Setter for <code>LINK.LINK</code>.
     */
    public void setLink(@NotNull String link) {
        this.link = link;
    }

    /**
     * Getter for <code>LINK.TYPE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getType() {
        return this.type;
    }

    /**
     * Setter for <code>LINK.TYPE</code>.
     */
    public void setType(@NotNull Integer type) {
        this.type = type;
    }

    /**
     * Getter for <code>LINK.STARS_COUNT</code>.
     */
    @Nullable
    public Integer getStarsCount() {
        return this.starsCount;
    }

    /**
     * Setter for <code>LINK.STARS_COUNT</code>.
     */
    public void setStarsCount(@Nullable Integer starsCount) {
        this.starsCount = starsCount;
    }

    /**
     * Getter for <code>LINK.ANSWERS_COUNT</code>.
     */
    @Nullable
    public Integer getAnswersCount() {
        return this.answersCount;
    }

    /**
     * Setter for <code>LINK.ANSWERS_COUNT</code>.
     */
    public void setAnswersCount(@Nullable Integer answersCount) {
        this.answersCount = answersCount;
    }

    /**
     * Getter for <code>LINK.UPDATE_DATE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public LocalDateTime getUpdateDate() {
        return this.updateDate;
    }

    /**
     * Setter for <code>LINK.UPDATE_DATE</code>.
     */
    public void setUpdateDate(@NotNull LocalDateTime updateDate) {
        this.updateDate = updateDate;
    }

    /**
     * Getter for <code>LINK.PREVIOUS_CHECK</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public LocalDateTime getPreviousCheck() {
        return this.previousCheck;
    }

    /**
     * Setter for <code>LINK.PREVIOUS_CHECK</code>.
     */
    public void setPreviousCheck(@NotNull LocalDateTime previousCheck) {
        this.previousCheck = previousCheck;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Link other = (Link) obj;
        if (this.link == null) {
            if (other.link != null) {
                return false;
            }
        } else if (!this.link.equals(other.link)) {
            return false;
        }
        if (this.type == null) {
            if (other.type != null) {
                return false;
            }
        } else if (!this.type.equals(other.type)) {
            return false;
        }
        if (this.starsCount == null) {
            if (other.starsCount != null) {
                return false;
            }
        } else if (!this.starsCount.equals(other.starsCount)) {
            return false;
        }
        if (this.answersCount == null) {
            if (other.answersCount != null) {
                return false;
            }
        } else if (!this.answersCount.equals(other.answersCount)) {
            return false;
        }
        if (this.updateDate == null) {
            if (other.updateDate != null) {
                return false;
            }
        } else if (!this.updateDate.equals(other.updateDate)) {
            return false;
        }
        if (this.previousCheck == null) {
            if (other.previousCheck != null) {
                return false;
            }
        } else if (!this.previousCheck.equals(other.previousCheck)) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.link == null) ? 0 : this.link.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.starsCount == null) ? 0 : this.starsCount.hashCode());
        result = prime * result + ((this.answersCount == null) ? 0 : this.answersCount.hashCode());
        result = prime * result + ((this.updateDate == null) ? 0 : this.updateDate.hashCode());
        result = prime * result + ((this.previousCheck == null) ? 0 : this.previousCheck.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Link (");

        sb.append(link);
        sb.append(", ").append(type);
        sb.append(", ").append(starsCount);
        sb.append(", ").append(answersCount);
        sb.append(", ").append(updateDate);
        sb.append(", ").append(previousCheck);

        sb.append(")");
        return sb.toString();
    }
}
