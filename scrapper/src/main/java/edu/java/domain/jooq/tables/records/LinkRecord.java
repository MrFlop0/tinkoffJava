/*
 * This file is generated by jOOQ.
 */

package edu.java.domain.jooq.tables.records;

import edu.java.domain.jooq.tables.Link;
import jakarta.validation.constraints.Size;
import java.beans.ConstructorProperties;
import java.time.LocalDateTime;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class LinkRecord extends UpdatableRecordImpl<LinkRecord>
    implements Record6<String, Integer, Integer, Integer, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>LINK.LINK</code>.
     */
    public void setLink(@NotNull String value) {
        set(0, value);
    }

    /**
     * Getter for <code>LINK.LINK</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getLink() {
        return (String) get(0);
    }

    /**
     * Setter for <code>LINK.TYPE</code>.
     */
    public void setType(@NotNull Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>LINK.TYPE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getType() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>LINK.STARS_COUNT</code>.
     */
    public void setStarsCount(@Nullable Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>LINK.STARS_COUNT</code>.
     */
    @Nullable
    public Integer getStarsCount() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>LINK.ANSWERS_COUNT</code>.
     */
    public void setAnswersCount(@Nullable Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>LINK.ANSWERS_COUNT</code>.
     */
    @Nullable
    public Integer getAnswersCount() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>LINK.UPDATE_DATE</code>.
     */
    public void setUpdateDate(@NotNull LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>LINK.UPDATE_DATE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public LocalDateTime getUpdateDate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>LINK.PREVIOUS_CHECK</code>.
     */
    public void setPreviousCheck(@NotNull LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>LINK.PREVIOUS_CHECK</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public LocalDateTime getPreviousCheck() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row6<String, Integer, Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row6<String, Integer, Integer, Integer, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<String> field1() {
        return Link.LINK.LINK_;
    }

    @Override
    @NotNull
    public Field<Integer> field2() {
        return Link.LINK.TYPE;
    }

    @Override
    @NotNull
    public Field<Integer> field3() {
        return Link.LINK.STARS_COUNT;
    }

    @Override
    @NotNull
    public Field<Integer> field4() {
        return Link.LINK.ANSWERS_COUNT;
    }

    @Override
    @NotNull
    public Field<LocalDateTime> field5() {
        return Link.LINK.UPDATE_DATE;
    }

    @Override
    @NotNull
    public Field<LocalDateTime> field6() {
        return Link.LINK.PREVIOUS_CHECK;
    }

    @Override
    @NotNull
    public String component1() {
        return getLink();
    }

    @Override
    @NotNull
    public Integer component2() {
        return getType();
    }

    @Override
    @Nullable
    public Integer component3() {
        return getStarsCount();
    }

    @Override
    @Nullable
    public Integer component4() {
        return getAnswersCount();
    }

    @Override
    @NotNull
    public LocalDateTime component5() {
        return getUpdateDate();
    }

    @Override
    @NotNull
    public LocalDateTime component6() {
        return getPreviousCheck();
    }

    @Override
    @NotNull
    public String value1() {
        return getLink();
    }

    @Override
    @NotNull
    public Integer value2() {
        return getType();
    }

    @Override
    @Nullable
    public Integer value3() {
        return getStarsCount();
    }

    @Override
    @Nullable
    public Integer value4() {
        return getAnswersCount();
    }

    @Override
    @NotNull
    public LocalDateTime value5() {
        return getUpdateDate();
    }

    @Override
    @NotNull
    public LocalDateTime value6() {
        return getPreviousCheck();
    }

    @Override
    @NotNull
    public LinkRecord value1(@NotNull String value) {
        setLink(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value2(@NotNull Integer value) {
        setType(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value3(@Nullable Integer value) {
        setStarsCount(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value4(@Nullable Integer value) {
        setAnswersCount(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value5(@NotNull LocalDateTime value) {
        setUpdateDate(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value6(@NotNull LocalDateTime value) {
        setPreviousCheck(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord values(
        @NotNull String value1,
        @NotNull Integer value2,
        @Nullable Integer value3,
        @Nullable Integer value4,
        @NotNull LocalDateTime value5,
        @NotNull LocalDateTime value6
    ) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinkRecord
     */
    public LinkRecord() {
        super(Link.LINK);
    }

    /**
     * Create a detached, initialised LinkRecord
     */
    @ConstructorProperties({"link", "type", "starsCount", "answersCount", "updateDate", "previousCheck"})
    public LinkRecord(
        @NotNull String link,
        @NotNull Integer type,
        @Nullable Integer starsCount,
        @Nullable Integer answersCount,
        @NotNull LocalDateTime updateDate,
        @NotNull LocalDateTime previousCheck
    ) {
        super(Link.LINK);

        setLink(link);
        setType(type);
        setStarsCount(starsCount);
        setAnswersCount(answersCount);
        setUpdateDate(updateDate);
        setPreviousCheck(previousCheck);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised LinkRecord
     */
    public LinkRecord(edu.java.domain.jooq.tables.pojos.Link value) {
        super(Link.LINK);

        if (value != null) {
            setLink(value.getLink());
            setType(value.getType());
            setStarsCount(value.getStarsCount());
            setAnswersCount(value.getAnswersCount());
            setUpdateDate(value.getUpdateDate());
            setPreviousCheck(value.getPreviousCheck());
            resetChangedOnNotNull();
        }
    }
}
